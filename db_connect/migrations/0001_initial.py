# Generated by Django 4.2 on 2023-04-16 06:27

import db_connect.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_type', models.CharField(choices=[('', 'Select Your Role'), ('student', 'Student'), ('tutor', 'Tutor'), ('mentor', 'Mentor')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', db_connect.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(max_length=10)),
                ('event_name', models.CharField(max_length=20)),
                ('event_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tid', models.CharField(max_length=9)),
                ('email', models.CharField(max_length=100)),
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TutorsCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.CharField(max_length=10)),
                ('cname', models.CharField(max_length=20)),
                ('Tid', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='db_connect.tutor')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('A_number', models.CharField(max_length=9)),
                ('Student_Name', models.CharField(max_length=20)),
                ('Student_email', models.EmailField(max_length=254)),
                ('Major', models.CharField(max_length=50)),
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Mid', models.CharField(max_length=9)),
                ('name', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=100)),
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Has_Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('A_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Student_number', to='db_connect.student')),
                ('event_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Edate', to='db_connect.events')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Eid', to='db_connect.events')),
                ('event_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Ename', to='db_connect.events')),
            ],
        ),
        migrations.CreateModel(
            name='course_registered',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Course_id', models.CharField(max_length=10)),
                ('Course_Name', models.CharField(max_length=20)),
                ('A_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CWID', to='db_connect.student')),
            ],
        ),
        migrations.CreateModel(
            name='Assignments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Assignment_Name', models.CharField(max_length=10)),
                ('Description', models.CharField(max_length=20)),
                ('Attach', models.CharField(max_length=10)),
                ('Subject_Status', models.CharField(max_length=20)),
                ('A_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_connect.student')),
                ('Tid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Tutor_id', to='db_connect.tutor')),
            ],
        ),
    ]
